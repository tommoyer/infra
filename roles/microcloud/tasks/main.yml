---
# tasks file for microcloud

- name: Get list of installed snaps
  ansible.builtin.command: '/usr/bin/snap list'
  register: installed_snaps

- name: Install microcloud
  ansible.builtin.command: 
    argv:
      - /usr/bin/snap
      - install
      - microcloud
      - --cohort="+"
      - --channel={{ microcloud_version }}
  when: '"microcloud" not in installed_snaps.stdout'

- name: Install microceph
  ansible.builtin.command:
    argv:
      - /usr/bin/snap
      - install
      - microceph
      - --cohort=+
      - --channel={{ microceph_version }}
  when: '"microceph" not in installed_snaps.stdout'

- name: Install microovn
  ansible.builtin.command:
    argv:
      - /usr/bin/snap
      - install
      - microovn
      - --cohort=+
      - --channel={{ microovn_version }}
  when: '"microovn" not in installed_snaps.stdout'

- name: Install LXD
  ansible.builtin.command:
    argv:
      - /usr/bin/snap
      - install
      - lxd
      - --cohort=+
      - --channel={{ lxd_version }}
  when: '"lxd" not in installed_snaps.stdout'

- name: LXD info
  ansible.builtin.command: '/usr/bin/snap info lxd'
  register: lxd_info

- name: Ensure LXD cohort
  ansible.builtin.command:
    argv:
      - /usr/bin/snap
      - refresh
      - lxd
      - --cohort=+
  when: '"in-cohort" not in lxd_info.stdout'

- name: Ensure correct LXD channel
  ansible.builtin.command:
    argv:
      - /usr/bin/snap
      - refresh
      - lxd
      - --channel=latest/stable
      - --cohort=+
  when: '"tracking:     latest/stable" not in lxd_info.stdout'

- name: Configure network interface
  ansible.builtin.template:
    src: 00-installer-config.yaml.j2
    dest: /etc/netplan/00-installer-config.yaml
    owner: root
    group: root
    mode: '0600'

- name: Apply network configuration
  ansible.builtin.command: /usr/sbin/netplan apply

- name: Ensure secondary network interface is up
  ansible.builtin.command: ip link set {{ microovn_interface }} up

- name: Set controlling group for LXD
  ansible.builtin.command: /usr/bin/snap set lxd daemon.user.group={{ ldap_lxd_group }}